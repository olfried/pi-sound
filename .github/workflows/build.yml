name: Build Raspberry Pi OS MIDI Image (Headless)

on:
  workflow_dispatch:

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Clone pi-gen
        run: |
          git clone --depth=1 https://github.com/RPi-Distro/pi-gen.git

      - name: Set up build environment
        run: |
          sudo apt update
          sudo apt install -y coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc python3 arch-test

      - name: Configure build stages
        run: |
          echo "IMG_NAME='raspios-midi-headless'" > pi-gen/config
          echo "ENABLE_SSH=1" >> pi-gen/config
          echo "DEPLOY_COMPRESSION=none" >> pi-gen/config
          echo "STAGE_LIST='stage0 stage1 stage2 stage4'" >> pi-gen/config

      - name: Add custom build stage
        run: |
          mkdir -p pi-gen/stage4/01-midi-setup
          cat << 'EOF' > pi-gen/stage4/01-midi-setup/00-run.sh
          #!/bin/bash
          on_chroot << EOF2
            apt-get update
            apt-get install -y fluidsynth fluid-soundfont-gm alsa-utils

            # Auto-start FluidSynth with optimized latency
            cat <<EOT > /etc/systemd/system/fluidsynth.service
            [Unit]
            Description=FluidSynth MIDI Synthesizer
            After=sound.target

            [Service]
            ExecStart=/usr/bin/fluidsynth -a alsa -o audio.period-size=64 -o audio.periods=2 -o synth.sample-rate=44100 /usr/share/sounds/sf2/FluidR3_GM.sf2
            Restart=always
            User=pi

            [Install]
            WantedBy=multi-user.target
            EOT

            systemctl enable fluidsynth

            # Enable SSH
            raspi-config nonint do_ssh 0

            # Create wifi setup script
            cat <<EOW > /usr/local/bin/wifi-setup.sh
            #!/bin/bash
            echo "WLAN SSID:"
            read ssid
            echo "WLAN Passwort:"
            read -s psk
            cat <<EOT2 > /etc/wpa_supplicant/wpa_supplicant.conf
            country=DE
            ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
            update_config=1
            network={
                ssid=\"\$ssid\"
                psk=\"\$psk\"
            }
            EOT2
            wpa_cli -i wlan0 reconfigure
            EOW

            chmod +x /usr/local/bin/wifi-setup.sh

            # Create performance mode service
            cat <<EOT3 > /etc/systemd/system/performance-mode.service
            [Unit]
            Description=Set CPU governor to performance

            [Service]
            Type=oneshot
            ExecStart=/bin/bash -c 'for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do echo performance > \$cpu; done'

            [Install]
            WantedBy=multi-user.target
            EOT3

            systemctl enable performance-mode

            # Disable Bluetooth and HDMI
            echo 'dtoverlay=disable-bt' >> /boot/config.txt
            echo 'disable_splash=1' >> /boot/config.txt
            echo 'hdmi_blanking=2' >> /boot/config.txt

            systemctl disable hciuart || true

            # Disable unnecessary services
            systemctl disable triggerhappy || true
            systemctl disable avahi-daemon || true
            systemctl disable cups || true
            systemctl disable cron || true
            systemctl disable plymouth || true
            systemctl disable rsyslog || true
            systemctl disable logrotate || true

            # Add kernel boot parameters for low latency
            sed -i 's/$/ quiet loglevel=3 mitigations=off nohz=on nohz_full=1-3 isolcpus=1-3/' /boot/cmdline.txt || true

          EOF2
          EOF
          chmod +x pi-gen/stage4/01-midi-setup/00-run.sh

      - name: Build image
        run: |
          cd pi-gen
          sudo ./build.sh

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: raspberry-pi-midi-image-headless
          path: pi-gen/deploy/*.img
